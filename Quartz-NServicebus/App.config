<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<configuration>
  <configSections>
    <section name="MessageForwardingInCaseOfFaultConfig" type="NServiceBus.Config.MessageForwardingInCaseOfFaultConfig, NServiceBus.Core" />
    <section name="UnicastBusConfig" type="NServiceBus.Config.UnicastBusConfig, NServiceBus.Core" />
    <section name="quartz" type="System.Configuration.NameValueSectionHandler, System, Version=1.0.5000.0,Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <!--<MessageForwardingInCaseOfFaultConfig 
    ErrorQueue="The queue to which errors will be forwarded." />-->
  <MessageForwardingInCaseOfFaultConfig ErrorQueue="error" />
  <!--<UnicastBusConfig 
    ForwardReceivedMessagesTo="The address to which messages received will be forwarded."
    DistributorControlAddress="The address for sending control messages to the distributor."
    DistributorDataAddress="The distributor's data address, used as the return address of messages sent by this endpoint."
    TimeToBeReceivedOnForwardedMessages="The time to be received set on forwarded messages, specified as a timespan see http://msdn.microsoft.com/en-us/library/vstudio/se73z7b9.aspx"
    TimeoutManagerAddress="The address that the timeout manager will use to send and receive messages." >
    <MessageEndpointMappings>
      To register all message types defined in an assembly:
      <add Assembly="assembly" Endpoint="queue@machinename" />
      
      To register all message types defined in an assembly with a specific namespace (it does not include sub namespaces):
      <add Assembly="assembly" Namespace="namespace" Endpoint="queue@machinename" />
      
      To register a specific type in an assembly:
      <add Assembly="assembly" Type="type fullname (http://msdn.microsoft.com/en-us/library/system.type.fullname.aspx)" Endpoint="queue@machinename" />
    </MessageEndpointMappings>
  </UnicastBusConfig>-->
  <UnicastBusConfig>
    <MessageEndpointMappings />
  </UnicastBusConfig>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
  </entityFramework>
  <connectionStrings>
    <add name="Quartz_DataStore" connectionString="Data Source=.\SQLEXPRESS; Initial Catalog=Quartz_DataStore; Integrated Security=True;"
      providerName="System.Data.SqlClient" />
    <add name="Quartz_DataStoreContext" connectionString="Data Source=US-SO-ACT-01109\SQLEXPRESS;Initial Catalog=Quartz_DataStore;Integrated Security=True;MultipleActiveResultSets=True"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <quartz>
    <add key="quartz.scheduler.instanceName" value="DefaultQuartzScheduler" />
    <add key="quartz.threadPool.type" value="Quartz.Simpl.SimpleThreadPool, Quartz" />
    <add key="quartz.threadPool.threadCount" value="1" />
    <add key="quartz.threadPool.threadPriority" value="Normal" />
    <add key="quartz.jobStore.misfireThreshold" value="60000" />
    <add key="quartz.jobStore.type" value="Quartz.Impl.AdoJobStore.JobStoreTX, Quartz" />
    <add key="quartz.jobStore.driverDelegateType" value="Quartz.Impl.AdoJobStore.StdAdoDelegate, Quartz" />
    <add key="quartz.jobStore.tablePrefix" value="QRTZ_" />
    <add key="quartz.jobStore.dataSource" value="myDS" />
    <add key="quartz.dataSource.myDS.connectionString" value="server=.\SQLExpress;database=Quartz_DataStore;Integrated Security=true;" />
    <add key="quartz.dataSource.myDS.provider" value="SqlServer-20" />
  </quartz>
</configuration>